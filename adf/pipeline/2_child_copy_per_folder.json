{
	"name": "2_child_copy_per_folder",
	"properties": {
		"activities": [
			{
				"name": "Copy folders",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Folders",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@json(activity('Get Folders').output.Response)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "copy folder recursively",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "sourcestor",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.container",
											"type": "Expression"
										},
										"folder": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "sinkstor",
									"type": "DatasetReference",
									"parameters": {
										"container": "backup",
										"folder": {
											"value": "@concat(pipeline().parameters.container,'/', item().name)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Get Folders",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@string(pipeline().parameters.data_distribution)",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "uneven",
							"activities": [
								{
									"name": "uneven_get_folders",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"url": {
											"value": "@concat('https://test-adf-copy-scale-fun.azurewebsites.net/api/HttpGetCopyFolders?code=2ho8Ha6cClJRemxOzni9npnFH-Fk7TkJtUJKMRxb1fSKAzFuHKXeKA%3D%3D&storage_account=testgdpstor2&storage_container=', pipeline().parameters.Container)",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "even_get_folders",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "sourcestor",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.Container",
											"type": "Expression"
										},
										"folder": "@coalesce(null)"
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"container": {
				"type": "string",
				"defaultValue": "adfparalleltest"
			},
			"data_distribution": {
				"type": "string",
				"defaultValue": "even"
			}
		},
		"annotations": []
	}
}